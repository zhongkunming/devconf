upstream {
    supervisor-api {
        server 127.0.0.1:7088;
        server 192.168.10.21:7088;
    }
}

server {
    listen       7000;
    server_name  localhost;
    root /home/supervisorweb/html;
    index index.html index.htm;

    access_log /home/supervisorweb/logs/access.log main;
    error_log /home/supervisorweb/logs/error.log;

    location / {
        try_files $uri $uri/ /index.html;
    }

     # API 请求转发
    location /api/ {
        proxy_pass http://supervisor-api;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # 超时设置
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;

        # 允许跨域设置
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;

        # 处理预检请求
        if ($request_method = OPTIONS) {
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            add_header 'Content-Length' 0;
            return 204;
        }
    }

    # 静态资源缓存设置
    location ~* \.(?:jpg|jpeg|gif|png|ico|svg|css|js|woff2)$ {
        access_log off;
        log_not_found off;
        expires 1d;
        add_header Cache-Control "public, immutable";
    }

     # 安全相关头部设置
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "frame-ancestors 'self';" always;

    # 禁止访问隐藏文件和目录
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    # 禁用不必要的HTTP方法
    if ($request_method !~ ^(GET|HEAD|POST|PUT|DELETE|OPTIONS)$ ) {
        return 405;
    }

    # 限制上传大小（防止大文件上传攻击）
    client_max_body_size 10m;
    client_body_buffer_size 128k;

    # 请求超时设置
    client_header_timeout 15s;
    client_body_timeout 15s;
    send_timeout 15s;
}